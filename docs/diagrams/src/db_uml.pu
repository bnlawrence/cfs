@startuml 
hide attributes
class cfs.Cell_Method #d6f4dc {
    + id (BigAutoField)
    + method (CharField)
    + axis (CharField)
    + qualifier (CharField)
    + intervals (CharField)
}


class cfs.Cell_MethodSet #d6f4dc {
    + id (BigAutoField)
    + key (CharField)
    # methods (ManyToManyField)
}
cfs.Cell_MethodSet o--o cfs.Cell_Method


class cfs.CollectionType #d6f4dc {
    - id (AutoField)
    + value (TextField)
    + key (CharField)
}


class cfs.Collection #d6f4dc {
    + _proxied (JSONField)
    + name (CharField)
    + description (TextField)
    - id (AutoField)
    # type (ManyToManyField)
    # tags (ManyToManyField)
    # variables (ManyToManyField)
}
cfs.Collection o--o cfs.CollectionType
cfs.Collection o--o cfs.Tag
cfs.Collection o--o cfs.Variable


class cfs.Domain #d6f4dc {
    - id (AutoField)
    + name (CharField)
    + region (CharField)
    + nominal_resolution (CharField)
    + size (PositiveIntegerField)
    + coordinates (CharField)
    + bbox_tl (FloatField)
    + bbox_tr (FloatField)
    + bbox_bl (FloatField)
    + bbox_br (FloatField)
}


class cfs.File #d6f4dc {
    - id (AutoField)
    + name (CharField)
    + path (CharField)
    + size (PositiveIntegerField)
    + type (CharField)
    + checksum (CharField)
    + checksum_method (CharField)
    + uuid (UUIDField)
    + format (CharField)
    # locations (ManyToManyField)
}
cfs.File o--o cfs.Location
cfs.File .- cfs.File_type


class cfs.FileSet #d6f4dc {
    + id (BigAutoField)
    + key (CharField)
    # files (ManyToManyField)
}
cfs.FileSet o--o cfs.File


class cfs.Location #d6f4dc {
    - id (AutoField)
    + name (CharField)
    + volume (PositiveBigIntegerField)
}


class cfs.Manifest #d6f4dc {
    - id (AutoField)
    ~ cfa_file (ForeignKey)
    ~ fragments (ForeignKey)
    + bounds (BinaryField)
    + units (CharField)
    + calendar (CharField)
    + total_size (PositiveBigIntegerField)
    + parent_uuid (UUIDField)
    + is_quark (BooleanField)
}
cfs.Manifest <--* cfs.File
cfs.Manifest <--* cfs.FileSet


class cfs.Relationship #d6f4dc {
    + id (BigAutoField)
    + predicate (CharField)
    ~ subject (ForeignKey)
    ~ related_to (ForeignKey)
}
cfs.Relationship <--* cfs.Collection
cfs.Relationship <--* cfs.Collection


class cfs.Tag #d6f4dc {
    - id (AutoField)
    + name (CharField)
}


class cfs.TimeDomain #d6f4dc {
    + id (BigAutoField)
    + interval (PositiveIntegerField)
    + interval_offset (PositiveIntegerField)
    + interval_units (CharField)
    + units (CharField)
    + calendar (CharField)
    + starting (FloatField)
    + ending (FloatField)
}


class cfs.VariableProperty #d6f4dc {
    - id (AutoField)
    + key (CharField)
    + value (CharField)
}
cfs.VariableProperty .- cfs.VariableProperty_key


class cfs.VariablePropertySet #d6f4dc {
    + id (BigAutoField)
    + key (CharField)
    # properties (ManyToManyField)
}
cfs.VariablePropertySet o--o cfs.VariableProperty


class cfs.Variable #d6f4dc {
    - id (AutoField)
    + _proxied (JSONField)
    ~ key_properties (ForeignKey)
    ~ spatial_domain (ForeignKey)
    ~ time_domain (ForeignKey)
    ~ cell_methods (ForeignKey)
    ~ in_file (ForeignKey)
    ~ in_manifest (ForeignKey)
}
cfs.Variable o--> cfs.VariablePropertySet
cfs.Variable o--> cfs.Domain
cfs.Variable o--> cfs.TimeDomain
cfs.Variable o--> cfs.Cell_MethodSet
cfs.Variable <--* cfs.File
cfs.Variable o--> cfs.Manifest


enum cfs.File_type{
    + C - ('C', 'CFA File')
    + A - ('A', 'CFA File holds atomic dataset(s)')
    + Q - ('Q', 'CFA File holds quark(s)')
    + S - ('S', 'Standalone File')
    + F - ('F', 'Fragment File')
}

enum cfs.VariableProperty_key{
    + SN - ('SN', 'standard_name')
    + LN - ('LN', 'long_name')
    + ID - ('ID', 'identity')
    + AO - ('AO', 'atomic_origin')
    + F - ('F', 'frequency')
    + S - ('S', 'source')
    + SI - ('SI', 'source_id')
    + VL - ('VL', 'variant_label')
    + R - ('R', 'realm')
    + E - ('E', 'experiment')
    + RI - ('RI', 'runid')
}

@enduml
