@startuml 
hide attributes
class db.Cell_Method #e4f4d6 {
    + id (BigAutoField)
    + method (CharField)
    + axis (CharField)
}


class db.Cell_MethodSet #e4f4d6 {
    + id (BigAutoField)
    + key (CharField)
    # methods (ManyToManyField)
}
db.Cell_MethodSet o--o db.Cell_Method


class db.CollectionType #e4f4d6 {
    - id (AutoField)
    + value (TextField)
    + key (CharField)
}


class db.Collection #e4f4d6 {
    + _proxied (JSONField)
    + name (CharField)
    + description (TextField)
    - id (AutoField)
    # type (ManyToManyField)
    # tags (ManyToManyField)
    # variables (ManyToManyField)
}
db.Collection o--o db.CollectionType
db.Collection o--o db.Tag
db.Collection o--o db.Variable


class db.Domain #e4f4d6 {
    - id (AutoField)
    + name (CharField)
    + region (CharField)
    + nominal_resolution (CharField)
    + size (PositiveIntegerField)
    + coordinates (CharField)
    + bbox_tl (FloatField)
    + bbox_tr (FloatField)
    + bbox_bl (FloatField)
    + bbox_br (FloatField)
}


class db.File #e4f4d6 {
    - id (AutoField)
    + name (CharField)
    + path (CharField)
    + size (PositiveIntegerField)
    + type (CharField)
    + checksum (CharField)
    + checksum_method (CharField)
    + uuid (UUIDField)
    + format (CharField)
    # locations (ManyToManyField)
}
db.File o--o db.Location
db.File .- db.File_type


class db.Location #e4f4d6 {
    - id (AutoField)
    + name (CharField)
    + volume (PositiveBigIntegerField)
}


class db.Manifest #e4f4d6 {
    - id (AutoField)
    ~ cfa_file (ForeignKey)
    + bounds (BinaryField)
    + units (CharField)
    + calendar (CharField)
    + total_size (PositiveBigIntegerField)
    + parent_uuid (UUIDField)
    # fragments (ManyToManyField)
}
db.Manifest <--* db.File
db.Manifest o--o db.File


class db.Relationship #e4f4d6 {
    + id (BigAutoField)
    + predicate (CharField)
    ~ subject (ForeignKey)
    ~ related_to (ForeignKey)
}
db.Relationship <--* db.Collection
db.Relationship <--* db.Collection


class db.Tag #e4f4d6 {
    - id (AutoField)
    + name (CharField)
}


class db.TimeDomain #e4f4d6 {
    + id (BigAutoField)
    + interval (PositiveIntegerField)
    + interval_units (CharField)
    + units (CharField)
    + calendar (CharField)
    + starting (FloatField)
    + ending (FloatField)
}


class db.VariableProperty #e4f4d6 {
    - id (AutoField)
    + key (CharField)
    + value (CharField)
}
db.VariableProperty .- db.VariableProperty_key


class db.Variable #e4f4d6 {
    - id (AutoField)
    + _proxied (JSONField)
    ~ spatial_domain (ForeignKey)
    ~ time_domain (ForeignKey)
    ~ cell_methods (ForeignKey)
    ~ in_file (ForeignKey)
    ~ in_manifest (ForeignKey)
    # key_properties (ManyToManyField)
}
db.Variable o--> db.Domain
db.Variable o--> db.TimeDomain
db.Variable o--> db.Cell_MethodSet
db.Variable <--* db.File
db.Variable o--> db.Manifest
db.Variable o--o db.VariableProperty


enum db.File_type{
    + C - ('C', 'CFA File')
    + A - ('A', 'CFA File holds atomic dataset(s)')
    + Q - ('Q', 'CFA File holds quark(s)')
    + S - ('S', 'Standalone File')
    + F - ('F', 'Fragment File')
}

enum db.VariableProperty_key{
    + SN - ('SN', 'standard_name')
    + LN - ('LN', 'long_name')
    + ID - ('ID', 'identity')
    + AO - ('AO', 'atomic_origin')
}

@enduml
